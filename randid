import random
desired_deck = {"Plains": 10, "high sentinels of arash": 1}

class Land():
    def __init__(self, name):
        self.name = name



class Hand:
    def __init__(self):
        self.hand = {} # if there is errors with this just put the if statement in
        # self.hand_size = len(self.hand) #Better to represent hand as a dictionary?

class Deck(Hand):
    def __init__(self, deck_list):
        self.deck =  self.create_ids("plains", 4)
        self.deck_size = len(deck_list)
        super().__init__()

    def shuffle_cards(self):
        random.shuffle(self.deck)

    def draw(self, number):
        for _ in range(number):
            self.card_to_add = self.deck.pop()
            print(self.card_to_add)
            if self.card_to_add.name in self.hand.keys():
                self.hand[self.card_to_add.name].append(self.card_to_add)
            else:
                self.hand[self.card_to_add.name] = [self.card_to_add]
            self.deck_size = len(self.deck) #this might be wrong
            self.hand_size = len(self.hand)

    def draw_starting_hand(self, starting_size = 7):
        self.draw(starting_size)

    def create_ids(self, name, number):
        a = {}
        k = 0
        while k < number:
            key = name + str(random.randint(1,10000))
            if key not in a.keys():
                value = Land("Plains")
                a[key] = value
                k +=1
        return a

    def create_deck_list(self, desired_deck):
        pass #take dict and call rand ids to make rand ids for all. return list. list gets assigned to self.deck

    def import_deck(self):
        pass #reading in some text file and format to dict form return dict



def main():
    create_ids("Plains", 10)

if __name__ == "__main__":
    main()
